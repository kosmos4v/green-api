{"ast":null,"code":"var _jsxFileName = \"/Users/valeriykasmasov/projects/green-api-test/src/components/common/Input/Input.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport classnames from \"classnames\";\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = _ref => {\n  _s();\n  let {\n    placeholder = '',\n    value = '',\n    type = 'text',\n    message = '',\n    disabled = false,\n    isErrorMessage = true,\n    onChange,\n    onEnter,\n    fullwidth = false,\n    name,\n    label = ''\n  } = _ref;\n  const handleInputChange = useCallback(event => {\n    if (typeof onChange === 'function' && !disabled) {\n      const newValue = event.target.value;\n      onChange(event, newValue);\n    }\n  }, [onChange, disabled]);\n  const handleEnterDown = useCallback(event => {\n    if (typeof onEnter === 'function' && !disabled && (event.code === 'Enter' || event.code === 'NumpadEnter')) {\n      onEnter();\n    }\n  }, [disabled, onEnter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames('input__wrapper', {\n      'nput__wrapper_fullwidth': fullwidth\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      className: \"input\",\n      placeholder: placeholder,\n      value: value,\n      onChange: handleInputChange,\n      onKeyDown: handleEnterDown,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isErrorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input__message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"FgRa/Kf5TkwQ3tvcGmm9YC3+ZBk=\");\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useCallback","classnames","jsxDEV","_jsxDEV","Input","_ref","_s","placeholder","value","type","message","disabled","isErrorMessage","onChange","onEnter","fullwidth","name","label","handleInputChange","event","newValue","target","handleEnterDown","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/components/common/Input/Input.tsx"],"sourcesContent":["import React, { useCallback, } from \"react\";\nimport classnames from \"classnames\";\n\nimport './Input.css';\n\ntype TInputProps = {\n  type?: 'text'\n  name?: string,\n  value: string,\n  isErrorMessage?: boolean;\n  message?: string,\n  label?: string,\n  placeholder: string,\n  disabled?: boolean,\n  fullwidth?: boolean,\n  onEnter?: () => void,\n  onChange: (event: React.ChangeEvent<HTMLInputElement> | undefined, value: string) => void,\n\n}\n\nexport const Input: React.FC<TInputProps> = ({ \n  placeholder = '',\n  value = '',\n  type='text',\n  message = '',\n  disabled = false,\n  isErrorMessage = true,\n  onChange,\n  onEnter,\n  fullwidth = false,\n  name,\n  label=''\n}) => {\n\n  const handleInputChange = useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (typeof onChange === 'function' && !disabled) {\n      const newValue = event.target.value;\n      onChange(event, newValue as never);\n    }\n  }, [onChange, disabled]);\n\n  const handleEnterDown = useCallback((event: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (typeof onEnter === 'function' && !disabled && (event.code === 'Enter' || event.code === 'NumpadEnter')) {\n      onEnter();\n    }\n  }, [disabled, onEnter]);\n\n  return (\n    <div className={classnames('input__wrapper', {'nput__wrapper_fullwidth': fullwidth})}>\n      <span>{label}</span>\n      <input\n        type={type}\n        name={name}\n        className=\"input\"\n        placeholder={placeholder}\n        value={value}\n        onChange={handleInputChange}\n        onKeyDown={handleEnterDown}\n        disabled={disabled}\n      />\n      {isErrorMessage && <span\n        className=\"input__message\"\n      >\n        {message}\n      </span>}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAS,OAAO;AAC3C,OAAOC,UAAU,MAAM,YAAY;AAEnC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBrB,OAAO,MAAMC,KAA4B,GAAGC,IAAA,IAYtC;EAAAC,EAAA;EAAA,IAZuC;IAC3CC,WAAW,GAAG,EAAE;IAChBC,KAAK,GAAG,EAAE;IACVC,IAAI,GAAC,MAAM;IACXC,OAAO,GAAG,EAAE;IACZC,QAAQ,GAAG,KAAK;IAChBC,cAAc,GAAG,IAAI;IACrBC,QAAQ;IACRC,OAAO;IACPC,SAAS,GAAG,KAAK;IACjBC,IAAI;IACJC,KAAK,GAAC;EACR,CAAC,GAAAZ,IAAA;EAEC,MAAMa,iBAAiB,GAAGlB,WAAW,CAAEmB,KAA0C,IAAW;IAC1F,IAAI,OAAON,QAAQ,KAAK,UAAU,IAAI,CAACF,QAAQ,EAAE;MAC/C,MAAMS,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACb,KAAK;MACnCK,QAAQ,CAACM,KAAK,EAAEC,QAAiB,CAAC;IACpC;EACF,CAAC,EAAE,CAACP,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAExB,MAAMW,eAAe,GAAGtB,WAAW,CAAEmB,KAA4C,IAAW;IAC1F,IAAI,OAAOL,OAAO,KAAK,UAAU,IAAI,CAACH,QAAQ,KAAKQ,KAAK,CAACI,IAAI,KAAK,OAAO,IAAIJ,KAAK,CAACI,IAAI,KAAK,aAAa,CAAC,EAAE;MAC1GT,OAAO,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAACH,QAAQ,EAAEG,OAAO,CAAC,CAAC;EAEvB,oBACEX,OAAA;IAAKqB,SAAS,EAAEvB,UAAU,CAAC,gBAAgB,EAAE;MAAC,yBAAyB,EAAEc;IAAS,CAAC,CAAE;IAAAU,QAAA,gBACnFtB,OAAA;MAAAsB,QAAA,EAAOR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpB1B,OAAA;MACEM,IAAI,EAAEA,IAAK;MACXO,IAAI,EAAEA,IAAK;MACXQ,SAAS,EAAC,OAAO;MACjBjB,WAAW,EAAEA,WAAY;MACzBC,KAAK,EAAEA,KAAM;MACbK,QAAQ,EAAEK,iBAAkB;MAC5BY,SAAS,EAAER,eAAgB;MAC3BX,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACDjB,cAAc,iBAAIT,OAAA;MACjBqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAEzBf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAvB,EAAA,CA/CYF,KAA4B;AAAA2B,EAAA,GAA5B3B,KAA4B;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/valeriykasmasov/projects/green-api-test/src/pages/Home/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { sendMessage, receiveNotification, deleteNotification } from '../../utils/requests';\nimport { Input } from \"../../components/common/Input/Input\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport { CurrentUserContext } from \"../../AppContext\";\nimport { MessageCard } from \"../../components/common/Message\";\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst сheckPhoneInput = /^\\d+$/;\nexport const Home = () => {\n  _s();\n  var _CurrentUserContextVa, _CurrentUserContextVa2;\n  const [phone, setPhone] = useState('');\n  const [chats, setChats] = useState({});\n  const [message, setMessage] = useState({\n    messageId: '',\n    text: '',\n    timestamp: '',\n    type: undefined\n  });\n  const [currentChat, setCurrentChat] = useState();\n  const CurrentUserContextValue = useContext(CurrentUserContext);\n  const userId = CurrentUserContextValue === null || CurrentUserContextValue === void 0 ? void 0 : (_CurrentUserContextVa = CurrentUserContextValue.currentUserData) === null || _CurrentUserContextVa === void 0 ? void 0 : _CurrentUserContextVa.id;\n  const userApiToken = CurrentUserContextValue === null || CurrentUserContextValue === void 0 ? void 0 : (_CurrentUserContextVa2 = CurrentUserContextValue.currentUserData) === null || _CurrentUserContextVa2 === void 0 ? void 0 : _CurrentUserContextVa2.apiToken;\n  const handleChangePhone = useCallback((_, value) => {\n    setPhone(value);\n  }, []);\n  const handleChangeMessage = useCallback((_, value) => {\n    setMessage({\n      ...message,\n      text: value\n    });\n  }, [message]);\n\n  // вынести из компонента\n\n  const loadChat = function (phone) {\n    let chatId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    let messages = arguments.length > 2 ? arguments[2] : undefined;\n    let messageId = arguments.length > 3 ? arguments[3] : undefined;\n    let text = arguments.length > 4 ? arguments[4] : undefined;\n    let timestamp = arguments.length > 5 ? arguments[5] : undefined;\n    let type = arguments.length > 6 ? arguments[6] : undefined;\n    setChats(prev => {\n      if (!prev[phone]) {\n        const newChat = {\n          ...prev,\n          [phone]: {\n            phone,\n            chatId,\n            messages: [...messages, {\n              messageId,\n              text,\n              timestamp,\n              type\n            }]\n          }\n        };\n        setPhone('');\n        return newChat;\n      }\n      return prev;\n    });\n  };\n\n  // вынести из компонента\n\n  const addNewChat = phone => {\n    setChats(prev => {\n      if (!prev[phone]) {\n        const newChat = {\n          ...prev,\n          [phone]: {\n            phone,\n            chatId: '',\n            messages: []\n          }\n        };\n        setPhone('');\n        return newChat;\n      }\n      return prev;\n    });\n  };\n  const handleClickCreateChat = useCallback(() => {\n    if (сheckPhoneInput.test(phone)) {\n      addNewChat(phone);\n    }\n  }, [phone]);\n  const handleClickCurrentChat = useCallback(event => {\n    setMessage({\n      messageId: '',\n      text: '',\n      timestamp: '',\n      type: undefined\n    });\n    const liElement = event.target;\n    const currentNumber = liElement.innerText;\n    setCurrentChat(chats[currentNumber]);\n  }, [chats]);\n\n  // вынести логику из компонента\n\n  const handleSendMessage = useCallback(() => {\n    const messageData = {\n      text: message.text,\n      messageId: '',\n      timestamp: new Date().getTime().toString(),\n      type: \"outgoing\"\n    };\n    const body = {\n      chatId: (currentChat === null || currentChat === void 0 ? void 0 : currentChat.phone) + '@c.us',\n      message: message.text\n    };\n    if (userId && userApiToken) {\n      sendMessage(userId, userApiToken, body).then(response => {\n        const curentMessage = currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages.find(data => data.timestamp === messageData.timestamp);\n        if (curentMessage) curentMessage.messageId = response.idMessage;\n      });\n    }\n    ;\n    currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages.push(messageData);\n    setMessage({\n      messageId: '',\n      timestamp: '',\n      text: '',\n      type: undefined\n    });\n  }, [currentChat, userApiToken, userId, message]);\n\n  //  вынести логику из компонента\n\n  useEffect(() => {\n    if (userId && userApiToken) receiveNotification(userId, userApiToken).then(response => {\n      if (response) {\n        const {\n          body\n        } = response;\n        const {\n          messageData,\n          senderData,\n          messageId\n        } = body;\n        const incomingPhone = senderData.sender.replace('@c.us', '');\n        const incomingChatId = senderData.chatId;\n        const incomingText = messageData.extendedTextMessageData.text;\n        const incomingTimestamp = body.timestamp;\n        const messages = chats[incomingPhone] ? chats[incomingPhone].messages : [];\n        loadChat(incomingPhone, incomingChatId, messages, messageId, incomingText, incomingTimestamp, 'incoming');\n        deleteNotification(userId, userApiToken, undefined, response.recieptId).then(response => console.log('response is deleted', response));\n      }\n      if (!response) receiveNotification(userId, userApiToken).then(response => {\n        console.log('one more response', response);\n      });\n    });\n  }, [userId, userApiToken, chats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__chat-panel__header\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 11 \\u0446\\u0438\\u0444\\u0440 \\u043D\\u043E\\u043C\\u0435\\u0440\\u0430 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n          value: phone,\n          onChange: handleChangePhone,\n          isErrorMessage: false,\n          onEnter: handleClickCreateChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"OK\",\n          onClick: handleClickCreateChat,\n          disabled: !phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"home__chat-panel__chats\",\n        children: Object.keys(chats).map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handleClickCurrentChat,\n          className: \"home__chat-panel__chat-card\",\n          children: [\" \", chat, \" \"]\n        }, chat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__conversation-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__conversation-panel__message-wrapper\",\n        children: currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages.sort((max, min) => parseInt(max.timestamp) - parseInt(min.timestamp)).map(chat => /*#__PURE__*/_jsxDEV(MessageCard, {\n          type: chat.type,\n          children: chat.text\n        }, chat.timestamp, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__conversation-panel__input-fields\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: !currentChat ? \"Чтобы напечатать сообщение выберите чат\" : \"Введите текст сообщения\",\n          onChange: handleChangeMessage,\n          value: message.text,\n          isErrorMessage: false,\n          onEnter: handleSendMessage,\n          disabled: !currentChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          onClick: handleSendMessage,\n          disabled: !message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"EfP1EEZtb53cv/OaVEzSdmVXYXQ=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","sendMessage","receiveNotification","deleteNotification","Input","Button","CurrentUserContext","MessageCard","jsxDEV","_jsxDEV","сheckPhoneInput","Home","_s","_CurrentUserContextVa","_CurrentUserContextVa2","phone","setPhone","chats","setChats","message","setMessage","messageId","text","timestamp","type","undefined","currentChat","setCurrentChat","CurrentUserContextValue","userId","currentUserData","id","userApiToken","apiToken","handleChangePhone","_","value","handleChangeMessage","loadChat","chatId","arguments","length","messages","prev","newChat","addNewChat","handleClickCreateChat","test","handleClickCurrentChat","event","liElement","target","currentNumber","innerText","handleSendMessage","messageData","Date","getTime","toString","body","then","response","curentMessage","find","data","idMessage","push","senderData","incomingPhone","sender","replace","incomingChatId","incomingText","extendedTextMessageData","incomingTimestamp","recieptId","console","log","className","children","placeholder","onChange","isErrorMessage","onEnter","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Object","keys","map","chat","sort","max","min","parseInt","_c","$RefreshReg$"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/pages/Home/Home.tsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { sendMessage, receiveNotification, deleteNotification } from '../../utils/requests';\nimport { Input } from \"../../components/common/Input/Input\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport { CurrentUserContext } from \"../../AppContext\";\nimport { TChat, TChats} from '../../models/chat';\nimport { TContextValue } from \"../../models/context\";\nimport { MessageCard } from \"../../components/common/Message\";\nimport { TMessage, TMessageType } from '../../models/message'\n\nimport './Home.css'\n\nconst сheckPhoneInput = /^\\d+$/;\n\nexport const Home: React.FC = () => {\n\n  const [phone, setPhone] = useState('');\n  const [chats, setChats] = useState<TChats>({});\n  const [message, setMessage] = useState<TMessage>({ messageId: '', text: '', timestamp: '', type: undefined });\n  const [currentChat, setCurrentChat] = useState<TChat>();\n  const CurrentUserContextValue = useContext<TContextValue>(CurrentUserContext);\n\n  const userId = CurrentUserContextValue?.currentUserData?.id;\n  const userApiToken = CurrentUserContextValue?.currentUserData?.apiToken;\n\n  const handleChangePhone = useCallback((_: unknown, value: string): void => {\n      setPhone(value);\n  }, []);\n  \n  const handleChangeMessage = useCallback((_: unknown, value: string): void => {\n      setMessage({...message, text: value});\n  }, [message]);\n\n  // вынести из компонента\n\n  const loadChat = (\n    phone: string,\n    chatId: string = '',\n    messages: TMessage[],\n    messageId: string,\n    text: string,\n    timestamp: string,\n    type: TMessageType\n  ) => {\n    setChats((prev) => {\n      if (!prev[phone]) {\n        const newChat = {...prev, [phone]: {\n          phone,\n          chatId,\n          messages: [...messages, {\n            messageId,\n            text,\n            timestamp,\n            type,\n          }]\n        }}\n        setPhone('')\n        return newChat\n      } return prev;\n      });\n  };\n  \n  // вынести из компонента\n\n  const addNewChat = (\n    phone: string,\n  ) => {\n    setChats((prev) => {\n      if (!prev[phone]) {\n        const newChat = {...prev, [phone]: {\n          phone,\n          chatId: '',\n          messages: [],\n        }}\n        setPhone('')\n        return newChat\n      } return prev;\n      });\n  };\n\n\n  const handleClickCreateChat = useCallback((): void => {\n        if (сheckPhoneInput.test(phone)) { addNewChat( phone) }\n      }, [phone]);\n\n      const handleClickCurrentChat = useCallback((event: React.MouseEvent<HTMLLIElement>): void => {\n        setMessage({ messageId: '', text: '', timestamp: '', type: undefined });\n        const liElement = event.target as HTMLLIElement;\n        const currentNumber = liElement.innerText;\n        setCurrentChat(chats[currentNumber]);\n      }, [chats]);\n\n      // вынести логику из компонента\n      \n      const handleSendMessage = useCallback(() => {\n        const messageData: TMessage = {\n          text: message.text,\n          messageId: '',\n          timestamp: new Date().getTime().toString(),\n          type: \"outgoing\"\n        }\n        const body = {\n          chatId: currentChat?.phone + '@c.us',\n          message: message.text,\n        };\n        if (userId && userApiToken) {\n          sendMessage(userId, userApiToken, body)\n          .then(response => {\n              const curentMessage = currentChat?.messages.find(data => data.timestamp === messageData.timestamp);\n              if (curentMessage) curentMessage.messageId = response.idMessage;\n            });\n          };\n          currentChat?.messages.push(messageData);\n          setMessage({ messageId: '', timestamp: '', text: '', type: undefined});\n        }, [currentChat, userApiToken, userId, message]);\n\n        //  вынести логику из компонента\n\n        useEffect(() => {\n        if (userId && userApiToken) receiveNotification(userId, userApiToken)\n        .then(response => {\n          if (response) {\n            const { body } = response;\n            const { messageData, senderData, messageId } = body;\n            const incomingPhone: string = senderData.sender.replace('@c.us', '');\n            const incomingChatId = senderData.chatId;\n            const incomingText = messageData.extendedTextMessageData.text;\n            const incomingTimestamp = body.timestamp;\n            const messages = chats[incomingPhone] ? chats[incomingPhone].messages : [];\n            loadChat(\n              incomingPhone,\n              incomingChatId,\n              messages,\n              messageId,\n              incomingText,\n              incomingTimestamp,\n              'incoming',\n              );\n            deleteNotification(userId, userApiToken, undefined, response.recieptId)\n            .then(response => console.log('response is deleted', response));\n          } \n           if (!response) receiveNotification(userId, userApiToken).then(response => {\n            console.log('one more response', response)\n           });\n        })\n      }, [userId, userApiToken, chats]);\n      \n     \n  return (\n    <div className=\"home\">\n      <div className=\"home__chat-panel\">\n        <div className=\"home__chat-panel__header\">\n          <Input\n            placeholder=\"Введите 11 цифр номера телефона\"\n            value={phone}\n            onChange={handleChangePhone}\n            isErrorMessage={false}\n            onEnter={handleClickCreateChat}\n          />\n          <Button\n          text=\"OK\"\n          onClick={handleClickCreateChat}\n          disabled={!phone}\n          />\n        </div>\n        <ul className=\"home__chat-panel__chats\">\n          {Object.keys(chats).map((chat) => <li onClick={ handleClickCurrentChat} className=\"home__chat-panel__chat-card\" key={chat}> {chat} </li>)}\n         </ul>\n      </div>\n      <div className=\"home__conversation-panel\">\n        <div className=\"home__conversation-panel__message-wrapper\">\n          {currentChat?.messages\n          .sort((max, min) => parseInt(max.timestamp) - parseInt(min.timestamp))\n          .map((chat) => (\n            <MessageCard key={chat.timestamp} type={chat.type}>\n              {chat.text}\n            </MessageCard>\n          ))}\n        </div>\n        <div className=\"home__conversation-panel__input-fields\">\n          <Input\n            placeholder={!currentChat ? \"Чтобы напечатать сообщение выберите чат\" : \"Введите текст сообщения\"}\n            onChange={handleChangeMessage}\n            value={message.text}\n            isErrorMessage={false}\n            onEnter={handleSendMessage}\n            disabled={!currentChat}\n          />\n          <Button\n            text=\"Отправить\"\n            onClick={handleSendMessage}\n            disabled={!message.text}\n            />\n          </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/valeriykasmasov/projects/green-api-test/src/pages/Home/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { sendMessage, receiveNotification, deleteNotification } from '../../utils/requests';\nimport { Input } from \"../../components/common/Input/Input\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport { CurrentUserContext } from \"../../AppContext\";\nimport { MessageCard } from \"../../components/common/Message\";\nimport './Home.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst сheckPhoneInput = /^\\d+$/;\nexport const Home = () => {\n  _s();\n  var _CurrentUserContextVa, _CurrentUserContextVa2;\n  const [phone, setPhone] = useState('');\n  const [chats, setChats] = useState({});\n  const [message, setMessage] = useState({\n    messageId: '',\n    text: '',\n    timestamp: '',\n    type: undefined\n  });\n  const [currentChat, setCurrentChat] = useState();\n  const {\n    userData\n  } = useSelector(state => state.user);\n  console.log('userData', userData);\n  const CurrentUserContextValue = useContext(CurrentUserContext);\n  const userId = CurrentUserContextValue === null || CurrentUserContextValue === void 0 ? void 0 : (_CurrentUserContextVa = CurrentUserContextValue.currentUserData) === null || _CurrentUserContextVa === void 0 ? void 0 : _CurrentUserContextVa.id;\n  const userApiToken = CurrentUserContextValue === null || CurrentUserContextValue === void 0 ? void 0 : (_CurrentUserContextVa2 = CurrentUserContextValue.currentUserData) === null || _CurrentUserContextVa2 === void 0 ? void 0 : _CurrentUserContextVa2.apiToken;\n  const handleChangePhone = useCallback((_, value) => {\n    setPhone(value);\n  }, []);\n  const handleChangeMessage = useCallback((_, value) => {\n    setMessage({\n      ...message,\n      text: value\n    });\n  }, [message]);\n\n  // вынести из компонента\n\n  const createMessage = (phone, newMessage) => {\n    if (chats[phone]) {\n      console.log(chats[phone]);\n      chats[phone].messages = [...chats[phone].messages, newMessage];\n    } else console.log('no');\n  };\n\n  // вынести из компонент\n\n  const createChat = (phone, chatId) => {\n    setChats(prev => {\n      if (!prev[phone]) {\n        const newChat = {\n          ...prev,\n          [phone]: {\n            phone,\n            chatId: chatId || '',\n            messages: []\n          }\n        };\n        setPhone('');\n        return newChat;\n      }\n      return prev;\n    });\n  };\n  const handleClickCreateChat = useCallback(() => {\n    if (сheckPhoneInput.test(phone)) {\n      createChat(phone);\n    }\n  }, [phone]);\n  const handleClickCurrentChat = useCallback(event => {\n    setMessage({\n      messageId: '',\n      text: '',\n      timestamp: '',\n      type: undefined\n    });\n    const liElement = event.target;\n    const currentNumber = liElement.innerText;\n    setCurrentChat(chats[currentNumber]);\n  }, [chats]);\n\n  // вынести логику из компонента\n\n  const handleSendMessage = useCallback(() => {\n    const messageData = {\n      text: message.text,\n      messageId: '',\n      timestamp: new Date().getTime().toString(),\n      type: \"outgoing\"\n    };\n    const body = {\n      chatId: (currentChat === null || currentChat === void 0 ? void 0 : currentChat.phone) + '@c.us',\n      message: message.text\n    };\n    if (userId && userApiToken) {\n      sendMessage(userId, userApiToken, body).then(response => {\n        const curentMessage = currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages.find(data => data.timestamp === messageData.timestamp);\n        if (curentMessage) curentMessage.messageId = response === null || response === void 0 ? void 0 : response.idMessage;\n      });\n    }\n    ;\n    currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages.push(messageData);\n    setMessage({\n      messageId: '',\n      timestamp: '',\n      text: '',\n      type: undefined\n    });\n  }, [currentChat, userApiToken, userId, message]);\n\n  //  вынести логику из компонета\n\n  useEffect(() => {\n    if (userId && userApiToken) receiveNotification(userId, userApiToken).then(response => {\n      if (response) {\n        var _messageData$textMess, _messageData$textMess2, _messageData$extended, _messageData$textMess4, _messageData$extended3;\n        const {\n          body\n        } = response;\n        const {\n          messageData,\n          senderData,\n          messageId,\n          typeWebhook\n        } = body;\n        const incomingPhone = senderData === null || senderData === void 0 ? void 0 : senderData.sender.replace('@c.us', '');\n        const incomingChatId = senderData === null || senderData === void 0 ? void 0 : senderData.chatId;\n        const incomingText = messageData !== null && messageData !== void 0 && (_messageData$textMess = messageData.textMessageData) !== null && _messageData$textMess !== void 0 && _messageData$textMess.textMessage ? messageData === null || messageData === void 0 ? void 0 : (_messageData$textMess2 = messageData.textMessageData) === null || _messageData$textMess2 === void 0 ? void 0 : _messageData$textMess2.textMessage : messageData === null || messageData === void 0 ? void 0 : (_messageData$extended = messageData.extendedTextMessageData) === null || _messageData$extended === void 0 ? void 0 : _messageData$extended.text;\n        const incomingTimestamp = body.timestamp;\n        if (typeWebhook !== 'incomingCall') {\n          var _messageData$textMess3, _messageData$extended2;\n          if (!chats[incomingPhone]) createChat(incomingPhone, incomingChatId);\n          if (messageData !== null && messageData !== void 0 && (_messageData$textMess3 = messageData.textMessageData) !== null && _messageData$textMess3 !== void 0 && _messageData$textMess3.textMessage || messageData !== null && messageData !== void 0 && (_messageData$extended2 = messageData.extendedTextMessageData) !== null && _messageData$extended2 !== void 0 && _messageData$extended2.text) createMessage(incomingPhone, {\n            messageId,\n            text: incomingText,\n            timestamp: incomingTimestamp,\n            type: 'incoming'\n          });\n          console.log('1 response', response);\n          deleteNotification(userId, userApiToken, undefined, response.receiptId).then(response => {\n            receiveNotification(userId, userApiToken);\n          });\n        }\n        if (typeWebhook === 'incomingCall' || !(messageData !== null && messageData !== void 0 && (_messageData$textMess4 = messageData.textMessageData) !== null && _messageData$textMess4 !== void 0 && _messageData$textMess4.textMessage) || !(messageData !== null && messageData !== void 0 && (_messageData$extended3 = messageData.extendedTextMessageData) !== null && _messageData$extended3 !== void 0 && _messageData$extended3.text)) {\n          deleteNotification(userId, userApiToken, undefined, response.receiptId);\n        }\n      }\n      if (!response) receiveNotification(userId, userApiToken).then(response => {\n        console.log('one more response', response);\n      });\n    });\n  }, [userId, userApiToken, chats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__chat-panel__header\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 11 \\u0446\\u0438\\u0444\\u0440 \\u043D\\u043E\\u043C\\u0435\\u0440\\u0430 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n          value: phone,\n          onChange: handleChangePhone,\n          isErrorMessage: false,\n          onEnter: handleClickCreateChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"OK\",\n          onClick: handleClickCreateChat,\n          disabled: !phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"home__chat-panel__chats\",\n        children: Object.keys(chats).map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handleClickCurrentChat,\n          className: \"home__chat-panel__chat-card\",\n          children: [\" \", chat, \" \"]\n        }, chat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__conversation-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__conversation-panel__message-wrapper\",\n        children: currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages.sort((max, min) => parseInt(max.timestamp) - parseInt(min.timestamp)).map(chat => /*#__PURE__*/_jsxDEV(MessageCard, {\n          type: chat.type,\n          children: chat.text\n        }, chat.timestamp, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home__conversation-panel__input-fields\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: !currentChat ? \"Чтобы напечатать сообщение выберите чат\" : \"Введите текст сообщения\",\n          onChange: handleChangeMessage,\n          value: message.text,\n          isErrorMessage: false,\n          onEnter: handleSendMessage,\n          disabled: !currentChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          onClick: handleSendMessage,\n          disabled: !message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"6GO2C6PTBCDKFC/leYXJaXGhMfI=\", false, function () {\n  return [useSelector];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","useSelector","sendMessage","receiveNotification","deleteNotification","Input","Button","CurrentUserContext","MessageCard","jsxDEV","_jsxDEV","сheckPhoneInput","Home","_s","_CurrentUserContextVa","_CurrentUserContextVa2","phone","setPhone","chats","setChats","message","setMessage","messageId","text","timestamp","type","undefined","currentChat","setCurrentChat","userData","state","user","console","log","CurrentUserContextValue","userId","currentUserData","id","userApiToken","apiToken","handleChangePhone","_","value","handleChangeMessage","createMessage","newMessage","messages","createChat","chatId","prev","newChat","handleClickCreateChat","test","handleClickCurrentChat","event","liElement","target","currentNumber","innerText","handleSendMessage","messageData","Date","getTime","toString","body","then","response","curentMessage","find","data","idMessage","push","_messageData$textMess","_messageData$textMess2","_messageData$extended","_messageData$textMess4","_messageData$extended3","senderData","typeWebhook","incomingPhone","sender","replace","incomingChatId","incomingText","textMessageData","textMessage","extendedTextMessageData","incomingTimestamp","_messageData$textMess3","_messageData$extended2","receiptId","className","children","placeholder","onChange","isErrorMessage","onEnter","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Object","keys","map","chat","sort","max","min","parseInt","_c","$RefreshReg$"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/pages/Home/Home.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState\n} from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { sendMessage, receiveNotification, deleteNotification } from '../../utils/requests';\nimport { Input } from \"../../components/common/Input/Input\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport { CurrentUserContext } from \"../../AppContext\";\nimport { TChat, TChats} from '../../models/chat';\nimport { TContextValue } from \"../../models/context\";\nimport { MessageCard } from \"../../components/common/Message\";\nimport { TMessage } from '../../models/message'\nimport { TRootState } from \"../../redux/reducers\";\n\nimport './Home.scss'\n\nconst сheckPhoneInput = /^\\d+$/;\n\nexport const Home: React.FC = () => {\n\n  const [phone, setPhone] = useState('');\n  const [chats, setChats] = useState<TChats>({});\n  const [message, setMessage] = useState<TMessage>({ messageId: '', text: '', timestamp: '', type: undefined });\n  const [currentChat, setCurrentChat] = useState<TChat>();\n  const { userData } = useSelector((state: TRootState) => state.user);\n  console.log('userData', userData);\n  const CurrentUserContextValue = useContext<TContextValue>(CurrentUserContext);\n\n  const userId = CurrentUserContextValue?.currentUserData?.id;\n  const userApiToken = CurrentUserContextValue?.currentUserData?.apiToken;\n\n  const handleChangePhone = useCallback((_: unknown, value: string): void => {\n      setPhone(value);\n  }, []);\n  \n  const handleChangeMessage = useCallback((_: unknown, value: string): void => {\n      setMessage({...message, text: value});\n  }, [message]);\n\n  // вынести из компонента\n  \n  const createMessage = (\n    phone: string,\n    newMessage: TMessage,\n    ) => {\n    if (\n      chats[phone]\n    ) {\n      console.log(chats[phone])\n      chats[phone].messages = [...chats[phone].messages, newMessage];\n    }\n    else console.log('no')\n  };\n\n  // вынести из компонент\n\n  const createChat = (\n    phone: string,\n    chatId?: string,\n  ) => {\n    setChats((prev) => {\n      if (!prev[phone]) {\n        const newChat = {...prev, [phone]: {\n          phone,\n          chatId: chatId || '',\n          messages: [],\n        }}\n        setPhone('')\n        return newChat\n      } return prev;\n      });\n  };\n\n  const handleClickCreateChat = useCallback((): void => {\n        if (сheckPhoneInput.test(phone)) { createChat( phone) }\n      }, [phone]);\n\n      const handleClickCurrentChat = useCallback((event: React.MouseEvent<HTMLLIElement>): void => {\n        setMessage({ messageId: '', text: '', timestamp: '', type: undefined });\n        const liElement = event.target as HTMLLIElement;\n        const currentNumber = liElement.innerText;\n        setCurrentChat(chats[currentNumber]);\n      }, [chats]);\n\n      // вынести логику из компонента\n      \n      const handleSendMessage = useCallback(() => {\n        const messageData: TMessage = {\n          text: message.text,\n          messageId: '',\n          timestamp: new Date().getTime().toString(),\n          type: \"outgoing\"\n        }\n        const body = {\n          chatId: currentChat?.phone + '@c.us',\n          message: message.text,\n        };\n        if (userId && userApiToken) {\n          sendMessage(userId, userApiToken, body)\n          .then(response => {\n              const curentMessage = currentChat?.messages.find(data => data.timestamp === messageData.timestamp);\n              if (curentMessage) curentMessage.messageId = response?.idMessage;\n            });\n          };\n          currentChat?.messages.push(messageData);\n          setMessage({ messageId: '', timestamp: '', text: '', type: undefined});\n        }, [currentChat, userApiToken, userId, message]);\n\n        //  вынести логику из компонета\n\n        useEffect(() => {\n        if (userId && userApiToken) receiveNotification(userId, userApiToken)\n        .then(response => {\n          if (response) {\n            const { body } = response;\n            const { messageData, senderData, messageId, typeWebhook } = body;\n            const incomingPhone: string = senderData?.sender.replace('@c.us', '');\n            const incomingChatId = senderData?.chatId;\n            const incomingText = messageData?.textMessageData?.textMessage \n            ? messageData?.textMessageData?.textMessage\n            : messageData?.extendedTextMessageData?.text;\n            const incomingTimestamp = body.timestamp;\n            if (typeWebhook !== 'incomingCall'){\n              if (!chats[incomingPhone]) createChat(incomingPhone, incomingChatId)\n              if (\n                messageData?.textMessageData?.textMessage\n                || messageData?.extendedTextMessageData?.text\n              ) createMessage(incomingPhone, {\n                  messageId,\n                  text: incomingText,\n                  timestamp: incomingTimestamp,\n                  type: 'incoming',\n                });\n              console.log('1 response', response)\n              deleteNotification(userId, userApiToken, undefined, response.receiptId)\n              .then(response => {\n                (receiveNotification(userId, userApiToken));\n              })}\n              if (\n              typeWebhook === 'incomingCall'\n              || !messageData?.textMessageData?.textMessage\n              || !messageData?.extendedTextMessageData?.text\n              ){\n                deleteNotification(userId, userApiToken, undefined, response.receiptId)\n              }\n          } \n           if (!response) receiveNotification(userId, userApiToken).then(response => {\n            console.log('one more response', response)\n           });\n        })\n      }, [userId, userApiToken, chats]);\n      \n     \n  return (\n    <div className=\"home\">\n      <div className=\"home__chat-panel\">\n        <div className=\"home__chat-panel__header\">\n          <Input\n            placeholder=\"Введите 11 цифр номера телефона\"\n            value={phone}\n            onChange={handleChangePhone}\n            isErrorMessage={false}\n            onEnter={handleClickCreateChat}\n          />\n          <Button\n          text=\"OK\"\n          onClick={handleClickCreateChat}\n          disabled={!phone}\n          />\n        </div>\n        <ul className=\"home__chat-panel__chats\">\n          {Object.keys(chats).map((chat) => <li onClick={ handleClickCurrentChat} className=\"home__chat-panel__chat-card\" key={chat}> {chat} </li>)}\n         </ul>\n      </div>\n      <div className=\"home__conversation-panel\">\n        <div className=\"home__conversation-panel__message-wrapper\">\n          {currentChat?.messages\n          .sort((max, min) => parseInt(max.timestamp) - parseInt(min.timestamp))\n          .map((chat) => (\n            <MessageCard key={chat.timestamp} type={chat.type}>\n              {chat.text}\n            </MessageCard>\n          ))}\n        </div>\n        <div className=\"home__conversation-panel__input-fields\">\n          <Input\n            placeholder={!currentChat ? \"Чтобы напечатать сообщение выберите чат\" : \"Введите текст сообщения\"}\n            onChange={handleChangeMessage}\n            value={message.text}\n            isErrorMessage={false}\n            onEnter={handleSendMessage}\n            disabled={!currentChat}\n          />\n          <Button\n            text=\"Отправить\"\n            onClick={handleSendMessage}\n            disabled={!message.text}\n            />\n          </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport { SAVE_USER_DATA } from '../actions/user';\nconst initialState = {\n  userId: '',\n  userApiToken: ''\n};\nconst userReducer = handleActions({\n  [SAVE_USER_DATA]: (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return {\n      ...state,\n      userId: payload.userId,\n      userApiToken: payload.userApiToken\n    };\n  }\n}, initialState);\nexport default userReducer;","map":{"version":3,"names":["handleActions","SAVE_USER_DATA","initialState","userId","userApiToken","userReducer","state","_ref","payload"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/redux/reducers/user.ts"],"sourcesContent":["import { handleActions } from 'redux-actions';\nimport { SAVE_USER_DATA } from '../actions/user';\n\nexport type TUserState = {\n  userId: string,\n  userApiToken: string,\n}\n\nexport type TUserAction = {\n  userId: string,\n  userApiToken: string,\n};\n\nconst initialState = {\n  userId: '',\n  userApiToken: '',\n}\n\nconst userReducer = handleActions<TUserState, TUserAction>({\n  [SAVE_USER_DATA]: (state, { payload }) => ({\n      ...state,\n      userId: payload.userId,\n      userApiToken: payload.userApiToken,\n  }),\n\n}, initialState);\n\nexport default userReducer;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,eAAe;AAC7C,SAASC,cAAc,QAAQ,iBAAiB;AAYhD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGL,aAAa,CAA0B;EACzD,CAACC,cAAc,GAAG,CAACK,KAAK,EAAAC,IAAA;IAAA,IAAE;MAAEC;IAAQ,CAAC,GAAAD,IAAA;IAAA,OAAM;MACvC,GAAGD,KAAK;MACRH,MAAM,EAAEK,OAAO,CAACL,MAAM;MACtBC,YAAY,EAAEI,OAAO,CAACJ;IAC1B,CAAC;EAAA;AAEH,CAAC,EAAEF,YAAY,CAAC;AAEhB,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
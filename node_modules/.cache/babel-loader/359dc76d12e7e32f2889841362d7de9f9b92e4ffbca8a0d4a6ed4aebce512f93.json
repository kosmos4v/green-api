{"ast":null,"code":"var _jsxFileName = \"/Users/valeriykasmasov/projects/green-api-test/src/pages/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { saveUserData } from \"../../redux/actions/user\";\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport './Login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [userId, setUserId] = useState('');\n  const [userApiToken, setUserApiToken] = useState('');\n  const [idError, setIdError] = useState('');\n  const [tokenError, setTokenError] = useState('');\n  const handleChangeId = useCallback((_, value) => {\n    setUserId(value);\n  }, []);\n  const handleChangeToken = useCallback((_, value) => {\n    setUserApiToken(value);\n  }, []);\n  const handleLogin = useCallback(() => {\n    if (!userId) setIdError('Введите ваш id');\n    if (!userApiToken) setTokenError('Введите ваш token');\n    if (userId && userApiToken) {\n      localStorage.setItem('userApiToken', userApiToken);\n      dispatch(saveUserData(userId));\n      navigate('/home');\n    }\n  }, [userId, userApiToken, navigate, dispatch]);\n  useEffect(() => {\n    if (userId) setIdError('');\n    if (userApiToken) setTokenError('');\n  }, [userId, userApiToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 Id\",\n      value: userId,\n      label: \"\\u0412\\u0430\\u0448 Id\",\n      onChange: handleChangeId,\n      message: idError,\n      fullwidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"\\u0412\\u0430\\u0448 Token\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 Token\",\n      value: userApiToken,\n      onChange: handleChangeToken,\n      message: tokenError,\n      fullwidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n      onClick: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"3/YeDdOxK+qDh0X0x9sV6hlKOq0=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useNavigate","useDispatch","saveUserData","Input","Button","jsxDEV","_jsxDEV","Login","_s","navigate","dispatch","userId","setUserId","userApiToken","setUserApiToken","idError","setIdError","tokenError","setTokenError","handleChangeId","_","value","handleChangeToken","handleLogin","localStorage","setItem","className","children","placeholder","label","onChange","message","fullwidth","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","_c","$RefreshReg$"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/pages/Login/Login.tsx"],"sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { saveUserData } from \"../../redux/actions/user\";\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\n\nimport './Login.scss';\n\nexport const Login: React.FC = () => {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [userId, setUserId] = useState('');\n  const [userApiToken, setUserApiToken] = useState('');\n  const [idError, setIdError] = useState('');\n  const [tokenError, setTokenError] = useState('');\n\n  const handleChangeId = useCallback((_: unknown, value: string): void => {\n    setUserId(value);\n  }, []);\n  \n  const handleChangeToken = useCallback((_: unknown, value: string): void => {\n    setUserApiToken(value);\n  }, []);\n\n  const handleLogin = useCallback((): void => {\n    if (!userId) setIdError('Введите ваш id')\n    if (!userApiToken) setTokenError('Введите ваш token')\n    if (userId && userApiToken) {\n      localStorage.setItem('userApiToken', userApiToken);\n      dispatch(saveUserData( userId ));\n      navigate('/home');\n    }\n  }, [userId, userApiToken, navigate, dispatch]);\n\n  useEffect((): void => {\n    if(userId) setIdError('');\n    if(userApiToken) setTokenError('');\n  }, [userId, userApiToken]);\n\n  return (\n  <div className=\"login\">\n    <Input\n      placeholder=\"Введите Ваш Id\"\n      value={userId}\n      label=\"Ваш Id\"\n      onChange={handleChangeId}\n      message={idError}\n      fullwidth\n    />\n    <Input\n      label=\"Ваш Token\"\n      placeholder=\"Введите Ваш Token\"\n      value={userApiToken}\n      onChange={handleChangeToken}\n      message={tokenError}\n      fullwidth\n    />\n    <Button\n      text=\"Войти\"\n      onClick={handleLogin}\n    />\n  </div>  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
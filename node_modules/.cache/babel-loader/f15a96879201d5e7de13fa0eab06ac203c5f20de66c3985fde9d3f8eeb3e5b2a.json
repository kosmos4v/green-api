{"ast":null,"code":"import { handleActions } from \"redux-actions\";\nimport { ADD_NEW_CHAT, SET_CURRENT_CHAT, SEND_MESSAGE, SEND_MESSAGE_FAILURE, SEND_MESSAGE_PENDING, SEND_MESSAGE_SUCCESS } from \"../actions/chat\";\nconst initialState = {\n  chats: {},\n  currentChat: {\n    phone: '',\n    chatId: '',\n    messages: []\n  },\n  isSendMessagePending: false,\n  incomingMessageId: '',\n  sendMessageError: undefined\n};\nexport const chatReduser = handleActions({\n  [ADD_NEW_CHAT]: (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    const {\n      phone\n    } = payload;\n    const chats = {\n      ...state.chats,\n      [phone]: {\n        phone: phone,\n        chatId: phone + '@c.us',\n        messages: []\n      }\n    };\n    return {\n      ...state,\n      chats\n    };\n  },\n  [SET_CURRENT_CHAT]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return {\n      ...state,\n      currentChat: payload.currentChat\n    };\n  },\n  [SEND_MESSAGE]: (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    const {\n      phone,\n      currentMessage\n    } = payload;\n    const updatedChat = {\n      ...state.currentChat,\n      messages: [...state.currentChat.messages, currentMessage]\n    };\n    return {\n      ...state,\n      currentChat: updatedChat,\n      chats: {\n        ...state.chats,\n        [phone]: updatedChat\n      }\n    };\n  },\n  [SEND_MESSAGE_PENDING]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return {\n      ...state,\n      isSendMessagePending: payload.isSendMessagePending\n    };\n  },\n  [SEND_MESSAGE_SUCCESS]: (state, _ref5) => {\n    let {\n      payload\n    } = _ref5;\n    return {\n      ...state,\n      incomingMessageId: payload.incomingMessageId,\n      sendMessageError: undefined\n    };\n  },\n  [SEND_MESSAGE_FAILURE]: (state, _ref6) => {\n    let {\n      payload\n    } = _ref6;\n    return {\n      ...state,\n      sendMessageError: payload.error\n    };\n  }\n}, initialState);\nexport default chatReduser;","map":{"version":3,"names":["handleActions","ADD_NEW_CHAT","SET_CURRENT_CHAT","SEND_MESSAGE","SEND_MESSAGE_FAILURE","SEND_MESSAGE_PENDING","SEND_MESSAGE_SUCCESS","initialState","chats","currentChat","phone","chatId","messages","isSendMessagePending","incomingMessageId","sendMessageError","undefined","chatReduser","state","_ref","payload","_ref2","_ref3","currentMessage","updatedChat","_ref4","_ref5","_ref6","error"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/redux/reducers/chats.ts"],"sourcesContent":["import { handleActions } from \"redux-actions\";\nimport { TChat, TChats } from \"../../models/chat\";\nimport { TMessage } from \"../../models/message\";\n\nimport {\n    ADD_NEW_CHAT,\n    SET_CURRENT_CHAT,\n    SEND_MESSAGE,\n    SEND_MESSAGE_FAILURE,\n    SEND_MESSAGE_PENDING,\n    SEND_MESSAGE_SUCCESS,\n    setCurrentChat,\n} from \"../actions/chat\";\n\nexport type TChatState = {\n  chats: TChats,\n  currentChat: TChat,\n  isSendMessagePending: boolean,\n  incomingMessageId: string,\n  sendMessageError?: string,\n};\n\nexport type TChatAction = {\n  chats: TChats,\n  currentChat: TChat,\n  currentMessage: TMessage,\n  isSendMessagePending: boolean,\n  incomingMessageId: string,\n  error?: string,\n  phone: string,\n};\n\nconst initialState: TChatState = {\n  chats: {},\n  currentChat: { phone: '', chatId: '', messages:[] },\n  isSendMessagePending: false,\n  incomingMessageId: '',\n  sendMessageError: undefined,\n};\n\nexport const chatReduser = handleActions<TChatState, TChatAction>({\n\n[ADD_NEW_CHAT]: (state, { payload }) => { \n  const { phone } = payload\n  const chats = {\n    ...state.chats,\n    [phone]: { phone: phone, chatId: phone + '@c.us', messages: [] }\n  }\n  return ({\n    ...state,\n    chats,\n })\n},\n\n[SET_CURRENT_CHAT]: (state, { payload }) => ({\n  ...state,\n  currentChat: payload.currentChat,\n}),\n\n[SEND_MESSAGE]: (state, { payload }) => {\n  const { phone, currentMessage } = payload;\n  const updatedChat = {\n    ...state.currentChat,\n    messages: [...state.currentChat.messages, currentMessage]\n  };\n  return ({\n    ...state,\n    currentChat: updatedChat,\n    chats: {...state.chats, [phone]: updatedChat}\n  })\n},\n\n[SEND_MESSAGE_PENDING]: (state, { payload }) => ({\n  ...state,\n  isSendMessagePending: payload.isSendMessagePending,\n}),\n\n[SEND_MESSAGE_SUCCESS]: (state, { payload }) => ({\n  ...state,\n  incomingMessageId: payload.incomingMessageId,\n  sendMessageError: undefined,\n}),\n\n[SEND_MESSAGE_FAILURE]: (state, { payload }) => ({\n    ...state,\n    sendMessageError: payload.error,\n})\n}, initialState);\n\nexport default chatReduser;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,eAAe;AAI7C,SACIC,YAAY,EACZC,gBAAgB,EAChBC,YAAY,EACZC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,QAEjB,iBAAiB;AAoBxB,MAAMC,YAAwB,GAAG;EAC/BC,KAAK,EAAE,CAAC,CAAC;EACTC,WAAW,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAC;EAAG,CAAC;EACnDC,oBAAoB,EAAE,KAAK;EAC3BC,iBAAiB,EAAE,EAAE;EACrBC,gBAAgB,EAAEC;AACpB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGjB,aAAa,CAA0B;EAElE,CAACC,YAAY,GAAG,CAACiB,KAAK,EAAAC,IAAA,KAAkB;IAAA,IAAhB;MAAEC;IAAQ,CAAC,GAAAD,IAAA;IACjC,MAAM;MAAET;IAAM,CAAC,GAAGU,OAAO;IACzB,MAAMZ,KAAK,GAAG;MACZ,GAAGU,KAAK,CAACV,KAAK;MACd,CAACE,KAAK,GAAG;QAAEA,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAED,KAAK,GAAG,OAAO;QAAEE,QAAQ,EAAE;MAAG;IACjE,CAAC;IACD,OAAQ;MACN,GAAGM,KAAK;MACRV;IACH,CAAC;EACF,CAAC;EAED,CAACN,gBAAgB,GAAG,CAACgB,KAAK,EAAAG,KAAA;IAAA,IAAE;MAAED;IAAQ,CAAC,GAAAC,KAAA;IAAA,OAAM;MAC3C,GAAGH,KAAK;MACRT,WAAW,EAAEW,OAAO,CAACX;IACvB,CAAC;EAAA,CAAC;EAEF,CAACN,YAAY,GAAG,CAACe,KAAK,EAAAI,KAAA,KAAkB;IAAA,IAAhB;MAAEF;IAAQ,CAAC,GAAAE,KAAA;IACjC,MAAM;MAAEZ,KAAK;MAAEa;IAAe,CAAC,GAAGH,OAAO;IACzC,MAAMI,WAAW,GAAG;MAClB,GAAGN,KAAK,CAACT,WAAW;MACpBG,QAAQ,EAAE,CAAC,GAAGM,KAAK,CAACT,WAAW,CAACG,QAAQ,EAAEW,cAAc;IAC1D,CAAC;IACD,OAAQ;MACN,GAAGL,KAAK;MACRT,WAAW,EAAEe,WAAW;MACxBhB,KAAK,EAAE;QAAC,GAAGU,KAAK,CAACV,KAAK;QAAE,CAACE,KAAK,GAAGc;MAAW;IAC9C,CAAC;EACH,CAAC;EAED,CAACnB,oBAAoB,GAAG,CAACa,KAAK,EAAAO,KAAA;IAAA,IAAE;MAAEL;IAAQ,CAAC,GAAAK,KAAA;IAAA,OAAM;MAC/C,GAAGP,KAAK;MACRL,oBAAoB,EAAEO,OAAO,CAACP;IAChC,CAAC;EAAA,CAAC;EAEF,CAACP,oBAAoB,GAAG,CAACY,KAAK,EAAAQ,KAAA;IAAA,IAAE;MAAEN;IAAQ,CAAC,GAAAM,KAAA;IAAA,OAAM;MAC/C,GAAGR,KAAK;MACRJ,iBAAiB,EAAEM,OAAO,CAACN,iBAAiB;MAC5CC,gBAAgB,EAAEC;IACpB,CAAC;EAAA,CAAC;EAEF,CAACZ,oBAAoB,GAAG,CAACc,KAAK,EAAAS,KAAA;IAAA,IAAE;MAAEP;IAAQ,CAAC,GAAAO,KAAA;IAAA,OAAM;MAC7C,GAAGT,KAAK;MACRH,gBAAgB,EAAEK,OAAO,CAACQ;IAC9B,CAAC;EAAA;AACD,CAAC,EAAErB,YAAY,CAAC;AAEhB,eAAeU,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
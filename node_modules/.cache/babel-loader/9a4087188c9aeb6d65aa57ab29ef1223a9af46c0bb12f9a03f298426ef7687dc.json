{"ast":null,"code":"var _jsxFileName = \"/Users/valeriykasmasov/projects/green-api-test/src/pages/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CurrentUserContext } from '../../AppContext';\nimport { sendMessage } from '../../utils/requests';\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const body = {\n    \"chatId\": \"79186513586@c.us\",\n    \"message\": \"I use Green-API to send this message to you!\"\n  };\n  sendMessage(\"POST\", \"https://api.green-api.com/waInstance101821549/sendMessage/d38ad31b01ce4c3781f0ddb44ed28680b67800968899417386\", body).then(data => console.log(data)).catch(err => console.log(err));\n  const navigate = useNavigate();\n  const CurrentUserContextValue = useContext(CurrentUserContext);\n  const [userId, setUserId] = useState('');\n  const [userApiToken, setUserApiToken] = useState('');\n  const [idError, setIdError] = useState('');\n  const [tokenError, setTokenError] = useState('');\n  const handleChangeId = useCallback((_, value) => {\n    setUserId(value);\n  }, []);\n  const handleChangeToken = useCallback((_, value) => {\n    setUserApiToken(value);\n  }, []);\n  const handleLogin = useCallback(() => {\n    if (!userId) setIdError('Введите ваш id');\n    if (!userApiToken) setTokenError('Введите ваш token');\n    if (userId && userApiToken) {\n      CurrentUserContextValue === null || CurrentUserContextValue === void 0 ? void 0 : CurrentUserContextValue.setCurrentUserData({\n        id: userId,\n        apiToken: userApiToken\n      });\n      navigate('/home');\n    }\n  }, [userId, userApiToken, navigate, CurrentUserContextValue]);\n  useEffect(() => {\n    if (userId) setIdError('');\n    if (userApiToken) setTokenError('');\n  }, [userId, userApiToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 Id\",\n      value: userId,\n      onChange: handleChangeId,\n      message: idError,\n      fullwidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 Token\",\n      value: userApiToken,\n      onChange: handleChangeToken,\n      message: tokenError,\n      fullwidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n      onClick: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"2xBOYiG16dyBMPQzfofr7y7Td48=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useContext","useNavigate","CurrentUserContext","sendMessage","Input","Button","jsxDEV","_jsxDEV","Login","_s","body","then","data","console","log","catch","err","navigate","CurrentUserContextValue","userId","setUserId","userApiToken","setUserApiToken","idError","setIdError","tokenError","setTokenError","handleChangeId","_","value","handleChangeToken","handleLogin","setCurrentUserData","id","apiToken","className","children","placeholder","onChange","message","fullwidth","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","_c","$RefreshReg$"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/pages/Login/Login.tsx"],"sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useContext\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CurrentUserContext } from '../../AppContext';\nimport {TContextValue} from '../../models/context'\nimport { sendMessage } from '../../utils/requests';\n\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\n\nimport './Login.css';\n\nexport const Login: React.FC = () => {\n\n  const body = \n  {\n    \"chatId\": \"79186513586@c.us\",\n    \"message\": \"I use Green-API to send this message to you!\"\n  };\n\n  sendMessage(\"POST\",\n  \"https://api.green-api.com/waInstance101821549/sendMessage/d38ad31b01ce4c3781f0ddb44ed28680b67800968899417386\",\n  body,\n).then(data => console.log(data)).catch(err => console.log(err))\n\n  const navigate = useNavigate();\n  const CurrentUserContextValue = useContext<TContextValue>(CurrentUserContext);\n  const [userId, setUserId] = useState('');\n  const [userApiToken, setUserApiToken] = useState('');\n  const [idError, setIdError] = useState('');\n  const [tokenError, setTokenError] = useState('');\n\n  const handleChangeId = useCallback((_: unknown, value: string): void => {\n    setUserId(value);\n  }, []);\n  \n  const handleChangeToken = useCallback((_: unknown, value: string): void => {\n    setUserApiToken(value);\n  }, []);\n\n  const handleLogin = useCallback((): void => {\n    if (!userId) setIdError('Введите ваш id')\n    if (!userApiToken) setTokenError('Введите ваш token')\n    if (userId && userApiToken) {\n      CurrentUserContextValue?.setCurrentUserData({\n        id: userId,\n        apiToken: userApiToken\n      });\n      navigate('/home');\n    }\n  }, [userId, userApiToken, navigate, CurrentUserContextValue]);\n\n  useEffect((): void => {\n    if(userId) setIdError('');\n    if(userApiToken) setTokenError('');\n  }, [userId, userApiToken]);\n\n  return (\n  <div className=\"login\">\n    <Input\n      placeholder=\"Введите Ваш Id\"\n      value={userId}\n      onChange={handleChangeId}\n      message={idError}\n      fullwidth\n    />\n    <Input\n      placeholder=\"Введите Ваш Token\"\n      value={userApiToken}\n      onChange={handleChangeToken}\n      message={tokenError}\n      fullwidth\n    />\n    <Button\n      text=\"Войти\"\n      onClick={handleLogin}\n    />\n  </div>  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const BASE_URL = \"https://api.green-api.com\";\nasync function request(_ref) {\n  let {\n    ...init\n  } = _ref;\n  const url = `${BASE_URL}/waInstance${userId}/${apiMethod}/${userApiToken}`;\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n    \"User-Agent\": \"PostmanRuntime/7.32.2\",\n    \"Connection\": \"keep-alive\",\n    \"Accept-Encoding\": \"gzip, deflate, br\",\n    \"Accept\": \"*/*\"\n  };\n  try {\n    const response = await fetch(receiptId ? url + `/${receiptId}` : url, {\n      headers,\n      method,\n      mode: 'cors',\n      body: JSON.stringify(body)\n    });\n    return response.json();\n  } catch (error) {\n    return console.error(`${apiMethod} response error: `, error);\n  }\n}\nexport function sendMessage(userId, userApiToken, body) {\n  return request('POST', userId, 'sendMessage', userApiToken, body);\n}\n;\nexport function receiveNotification(userId, userApiToken) {\n  return request('GET', userId, 'receiveNotification', userApiToken);\n}\n;\nexport function deleteNotification(userId, userApiToken, receiptId) {\n  return request('DELETE', userId, 'deleteNotification', userApiToken);\n}","map":{"version":3,"names":["BASE_URL","request","_ref","init","url","userId","apiMethod","userApiToken","headers","response","fetch","receiptId","method","mode","body","JSON","stringify","json","error","console","sendMessage","receiveNotification","deleteNotification"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/utils/requests/requests.ts"],"sourcesContent":["const BASE_URL = \"https://api.green-api.com\";\n\ntype TBody = Record<string, string>;\n\ntype TInit = {\n  method: string,\n  userId: string,\n  apiMethod: string,\n  userApiToken: string,\n  body?: TBody,\n  receiptId?: number,\n}\n\nasync function request( {...init}: TInit\n  \n  ) {\n\n  const url = `${BASE_URL}/waInstance${userId}/${apiMethod}/${userApiToken}`\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n    \"User-Agent\": \"PostmanRuntime/7.32.2\",\n    \"Connection\": \"keep-alive\",\n    \"Accept-Encoding\": \"gzip, deflate, br\",\n    \"Accept\": \"*/*\",\n  }\n\n  try {\n    const response = await fetch(\n      receiptId ? url+ `/${receiptId}` : url,\n      {\n        headers,\n        method,\n        mode: 'cors',\n        body: JSON.stringify(body),\n      }\n    );\n    return response.json();\n  } catch (error) {\n    return console.error(`${apiMethod} response error: `, error);\n  }\n}\n\nexport function sendMessage(userId: string, userApiToken: string, body: TBody) {\n  return request('POST', userId, 'sendMessage', userApiToken, body);\n};\n\nexport function receiveNotification(userId: string, userApiToken: string){\n  return request('GET', userId, 'receiveNotification', userApiToken);\n};\n\nexport function deleteNotification (userId: string, userApiToken: string, receiptId: number) {\n  return request ('DELETE', userId, 'deleteNotification', userApiToken);\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;AAa5C,eAAeC,OAAOA,CAAAC,IAAA,EAElB;EAAA,IAFoB;IAAC,GAAGC;EAAW,CAAC,GAAAD,IAAA;EAItC,MAAME,GAAG,GAAI,GAAEJ,QAAS,cAAaK,MAAO,IAAGC,SAAU,IAAGC,YAAa,EAAC;EAE1E,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE,kBAAkB;IAClC,6BAA6B,EAAE,uBAAuB;IACtD,YAAY,EAAE,uBAAuB;IACrC,YAAY,EAAE,YAAY;IAC1B,iBAAiB,EAAE,mBAAmB;IACtC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BC,SAAS,GAAGP,GAAG,GAAG,IAAGO,SAAU,EAAC,GAAGP,GAAG,EACtC;MACEI,OAAO;MACPI,MAAM;MACNC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC3B,CACF,CAAC;IACD,OAAOL,QAAQ,CAACQ,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOC,OAAO,CAACD,KAAK,CAAE,GAAEZ,SAAU,mBAAkB,EAAEY,KAAK,CAAC;EAC9D;AACF;AAEA,OAAO,SAASE,WAAWA,CAACf,MAAc,EAAEE,YAAoB,EAAEO,IAAW,EAAE;EAC7E,OAAOb,OAAO,CAAC,MAAM,EAAEI,MAAM,EAAE,aAAa,EAAEE,YAAY,EAAEO,IAAI,CAAC;AACnE;AAAC;AAED,OAAO,SAASO,mBAAmBA,CAAChB,MAAc,EAAEE,YAAoB,EAAC;EACvE,OAAON,OAAO,CAAC,KAAK,EAAEI,MAAM,EAAE,qBAAqB,EAAEE,YAAY,CAAC;AACpE;AAAC;AAED,OAAO,SAASe,kBAAkBA,CAAEjB,MAAc,EAAEE,YAAoB,EAAEI,SAAiB,EAAE;EAC3F,OAAOV,OAAO,CAAE,QAAQ,EAAEI,MAAM,EAAE,oBAAoB,EAAEE,YAAY,CAAC;AACvE"},"metadata":{},"sourceType":"module","externalDependencies":[]}
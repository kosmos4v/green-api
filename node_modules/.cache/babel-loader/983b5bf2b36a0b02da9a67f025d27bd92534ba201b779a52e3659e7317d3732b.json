{"ast":null,"code":"import { request } from '../utils/requests/request';\nexport const apiSendMessage = async (phone, currentMessage, userId) => {\n  const body = {\n    chatId: phone + '@c.us',\n    message: currentMessage.text\n  };\n  const a = await request('POST', userId, 'sendMessage', body);\n  return await a.json();\n  // console.log('phone', phone)\n  // console.log('currentMessage', currentMessage)\n  // console.log('userId', userId)\n};\n\n// export function sendMessage(userId: string, userApiToken: string, body: TBody) {\n//   return request('POST', userId, 'sendMessage', userApiToken, body);\n// };\n\n// const messageData: TMessage = {\n//   text: message.text,\n//   messageId: '',\n//   timestamp: new Date().getTime().toString(),\n//   type: \"outgoing\"\n// }\n// const body = {\n//   chatId: currentChat?.phone + '@c.us',\n//   message: message.text,\n// };\n// if (userId && userApiToken) {\n//   sendMessage(userId, userApiToken, body)\n//   .then(response => {\n//       const curentMessage = currentChat?.messages.find(data => data.timestamp === messageData.timestamp);\n//       if (curentMessage) curentMessage.messageId = response?.idMessage;\n//     });\n//   };\n//   currentChat?.messages.push(messageData);\n//   setMessage({ messageId: '', timestamp: '', text: '', type: undefined});","map":{"version":3,"names":["request","apiSendMessage","phone","currentMessage","userId","body","chatId","message","text","a","json"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/api/index.ts"],"sourcesContent":["import { TMessage } from \"../models/message\";\nimport { request } from '../utils/requests/request';\n\n\n\nexport const apiSendMessage = async (phone: string, currentMessage: TMessage, userId: string) => {\n\n  const body = {\n       chatId: phone + '@c.us',\n       message: currentMessage.text,\n  }\n  const a = await request('POST', userId, 'sendMessage', body);\n  return await a.json();\n// console.log('phone', phone)\n// console.log('currentMessage', currentMessage)\n// console.log('userId', userId)\n};\n\n       \n// export function sendMessage(userId: string, userApiToken: string, body: TBody) {\n//   return request('POST', userId, 'sendMessage', userApiToken, body);\n// };\n\n // const messageData: TMessage = {\n        //   text: message.text,\n        //   messageId: '',\n        //   timestamp: new Date().getTime().toString(),\n        //   type: \"outgoing\"\n        // }\n        // const body = {\n        //   chatId: currentChat?.phone + '@c.us',\n        //   message: message.text,\n        // };\n        // if (userId && userApiToken) {\n        //   sendMessage(userId, userApiToken, body)\n        //   .then(response => {\n        //       const curentMessage = currentChat?.messages.find(data => data.timestamp === messageData.timestamp);\n        //       if (curentMessage) curentMessage.messageId = response?.idMessage;\n        //     });\n        //   };\n        //   currentChat?.messages.push(messageData);\n        //   setMessage({ messageId: '', timestamp: '', text: '', type: undefined});\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,2BAA2B;AAInD,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,KAAa,EAAEC,cAAwB,EAAEC,MAAc,KAAK;EAE/F,MAAMC,IAAI,GAAG;IACRC,MAAM,EAAEJ,KAAK,GAAG,OAAO;IACvBK,OAAO,EAAEJ,cAAc,CAACK;EAC7B,CAAC;EACD,MAAMC,CAAC,GAAG,MAAMT,OAAO,CAAC,MAAM,EAAEI,MAAM,EAAE,aAAa,EAAEC,IAAI,CAAC;EAC5D,OAAO,MAAMI,CAAC,CAACC,IAAI,CAAC,CAAC;EACvB;EACA;EACA;AACA,CAAC;;AAGD;AACA;AACA;;AAEC;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
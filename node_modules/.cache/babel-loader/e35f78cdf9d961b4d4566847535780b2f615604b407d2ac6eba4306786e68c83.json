{"ast":null,"code":"import { call, put } from 'typed-redux-saga';\nimport { takeEvery } from 'redux-saga/effects';\nimport { SEND_MESSAGE, sendMessagePending, sendMessageFailure } from '../actions/chat';\nimport { apiSendMessage } from '../../api/index';\n// import { TChat } from '../../models/chat';\n// import { TRootState } from '../reducers';\n\nfunction sendMessage(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      yield put(sendMessagePending(true));\n      console.log('Yes');\n      // const phone = yield* select((state: TRootState) => state.user); // вытянул телефон из стейта\n      // const incomingMessageId = yield* call(apiSendMessage, payload.phone, payload.message, payload.userId);\n      const incomingMessageId = yield* call(apiSendMessage, payload.phone, payload.message, payload.userId);\n      console.log('incomingMessageId', incomingMessageId);\n      // if (incomingMessageId.idMessage) {\n      //     yield put(sendMessageSuccess(incomingMessageId.idMessage))};\n    } catch (e) {\n      yield put(sendMessageFailure('Не удалось отправить сообщение'));\n    } finally {\n      yield put(sendMessagePending(false));\n    }\n  }();\n}\n;\nexport default function* chatSaga() {\n  yield takeEvery(SEND_MESSAGE, sendMessage);\n}","map":{"version":3,"names":["call","put","takeEvery","SEND_MESSAGE","sendMessagePending","sendMessageFailure","apiSendMessage","sendMessage","_ref","payload","console","log","incomingMessageId","phone","message","userId","e","chatSaga"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/redux/sagas/chat.ts"],"sourcesContent":["import { call, put, select } from 'typed-redux-saga';\nimport { takeEvery } from 'redux-saga/effects';\nimport { Action } from 'redux-actions';\n\nimport {\n    SEND_MESSAGE,\n    sendMessagePending,\n    sendMessageSuccess,\n    sendMessageFailure,\n} from '../actions/chat';\nimport { TMessage } from '../../models/message';\nimport { apiSendMessage } from '../../api/index';\n// import { TChat } from '../../models/chat';\n// import { TRootState } from '../reducers';\n\nfunction* sendMessage({ payload }: Action<{ phone: string, message: TMessage, userId: string}>) {\n  try {\n    yield put(sendMessagePending(true));\n    console.log('Yes');\n    // const phone = yield* select((state: TRootState) => state.user); // вытянул телефон из стейта\n    // const incomingMessageId = yield* call(apiSendMessage, payload.phone, payload.message, payload.userId);\n    const incomingMessageId = yield* call(apiSendMessage, payload.phone, payload.message, payload.userId);\n    console.log('incomingMessageId', incomingMessageId);\n    // if (incomingMessageId.idMessage) {\n    //     yield put(sendMessageSuccess(incomingMessageId.idMessage))};\n  } catch (e) {\n      yield put(sendMessageFailure('Не удалось отправить сообщение'));\n  } finally {\n      yield put(sendMessagePending(false));\n  }\n};\n\nexport default function* chatSaga () {\n    yield takeEvery(SEND_MESSAGE, sendMessage);\n}"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,QAAgB,kBAAkB;AACpD,SAASC,SAAS,QAAQ,oBAAoB;AAG9C,SACIC,YAAY,EACZC,kBAAkB,EAElBC,kBAAkB,QACf,iBAAiB;AAExB,SAASC,cAAc,QAAQ,iBAAiB;AAChD;AACA;;AAEA,SAAUC,WAAWA,CAAAC,IAAA;EAAA,IAAC;IAAEC;EAAqE,CAAC,GAAAD,IAAA;EAAA,oBAAE;IAC9F,IAAI;MACF,MAAMP,GAAG,CAACG,kBAAkB,CAAC,IAAI,CAAC,CAAC;MACnCM,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB;MACA;MACA,MAAMC,iBAAiB,GAAG,OAAOZ,IAAI,CAACM,cAAc,EAAEG,OAAO,CAACI,KAAK,EAAEJ,OAAO,CAACK,OAAO,EAAEL,OAAO,CAACM,MAAM,CAAC;MACrGL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,iBAAiB,CAAC;MACnD;MACA;IACF,CAAC,CAAC,OAAOI,CAAC,EAAE;MACR,MAAMf,GAAG,CAACI,kBAAkB,CAAC,gCAAgC,CAAC,CAAC;IACnE,CAAC,SAAS;MACN,MAAMJ,GAAG,CAACG,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACxC;EACF,CAAC;AAAA;AAAA;AAED,eAAe,UAAUa,QAAQA,CAAA,EAAI;EACjC,MAAMf,SAAS,CAACC,YAAY,EAAEI,WAAW,CAAC;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
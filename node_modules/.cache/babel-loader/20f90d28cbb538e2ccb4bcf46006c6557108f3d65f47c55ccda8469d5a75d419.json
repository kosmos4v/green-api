{"ast":null,"code":"export async function sendMessage(method, url, body) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const response = await fetch(url, {\n    method: method,\n    body: JSON.stringify(body),\n    headers: headers\n  });\n  return await response.json();\n}\n;\nconst body = {\n  \"chatId\": \"11001234567@c.us\",\n  \"message\": \"I use Green-API to send this message to you!\"\n};\nsendMessage(\"POST\", \"https://api.green-api.com/waInstance{1101821549}/SendMessage/{d38ad31b01ce4c3781f0ddb44ed28680b67800968899417386}\", body).then(data => console.log(data)).catch(err => console.log(err));\nconsole.log('ok');","map":{"version":3,"names":["sendMessage","method","url","body","headers","response","fetch","JSON","stringify","json","then","data","console","log","catch","err"],"sources":["/Users/valeriykasmasov/projects/green-api-test/src/utils/requests.ts"],"sourcesContent":["\nexport async function sendMessage(method: string, url: string, body: Record<string, string>) {\n\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n\n  const response = await fetch(url, {\n    method: method,\n    body: JSON.stringify(body),\n    headers: headers,\n  });\n    return await response.json();\n};\n\nconst body = \n  {\n    \"chatId\": \"11001234567@c.us\",\n    \"message\": \"I use Green-API to send this message to you!\"\n  };\n\nsendMessage(\n  \"POST\",\n  \"https://api.green-api.com/waInstance{1101821549}/SendMessage/{d38ad31b01ce4c3781f0ddb44ed28680b67800968899417386}\",\n  body,\n).then(data => console.log(data)).catch(err => console.log(err))\nconsole.log('ok')"],"mappings":"AACA,OAAO,eAAeA,WAAWA,CAACC,MAAc,EAAEC,GAAW,EAAEC,IAA4B,EAAE;EAE3F,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;IAChCD,MAAM,EAAEA,MAAM;IACdE,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC1BC,OAAO,EAAEA;EACX,CAAC,CAAC;EACA,OAAO,MAAMC,QAAQ,CAACI,IAAI,CAAC,CAAC;AAChC;AAAC;AAED,MAAMN,IAAI,GACR;EACE,QAAQ,EAAE,kBAAkB;EAC5B,SAAS,EAAE;AACb,CAAC;AAEHH,WAAW,CACT,MAAM,EACN,mHAAmH,EACnHG,IACF,CAAC,CAACO,IAAI,CAACC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAACG,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;AAChEH,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}